name: Build and Deploy Coverage Report

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'

    - name: Install ReportGenerator
      run: dotnet tool install -g dotnet-reportgenerator-globaltool

    - name: Install dependencies
      run: dotnet restore

    - name: Run tests and collect coverage
      run: |
        dotnet test --collect:"XPlat Code Coverage"

    - name: Find latest coverage report
      id: find-coverage
      run: |
        # Find the latest coverage report file path
        COVERAGE_FILE=$(find $(pwd)/BookstoreAPI.Tests/TestResults -name "coverage.cobertura.xml" | sort | tail -n 1)
        echo "Coverage report path: $COVERAGE_FILE"
        echo "coverage-file=$COVERAGE_FILE" >> $GITHUB_ENV

    - name: Generate coverage report
      run: |
        reportgenerator -reports:${{ env.coverage-file }} -targetdir:coverage-report -reporttypes:Html

    - name: Deploy coverage report to GitHub Pages
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage-report/
        
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up GitHub Pages
      uses: actions/setup-pages@v3
      with:
        path: coverage-report

    - name: Deploy coverage report
      uses: peaceiris/actions-gh-pages@v3
      with:
        deploy_key: ${{ secrets.GITHUB_DEPLOY_KEY }}
        publish_dir: ./coverage-report
        user_name: GitHub Actions
        user_email: actions@github.com
